# See http://www.appveyor.com/docs/appveyor-yml

version: '{build}'


clone_depth: 5

cache:
- x86_64-6.3.0-release-posix-seh-rt_v5-rev1.7z
- i686-6.3.0-release-posix-dwarf-rt_v5-rev1.7z
- boost_1_63_0.7z
- SDL2_mixer-devel-2.0.1-mingw.tar.gz
- SDL2_ttf-devel-2.0.14-mingw.tar.gz
- SDL2_image-devel-2.0.1-mingw.tar.gz
- SDL2-devel-2.0.5-mingw.tar.gz

environment:
  matrix:
  - MINGW_DIR: mingw64
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/6.3.0/threads-posix/seh/x86_64-6.3.0-release-posix-seh-rt_v5-rev1.7z/download
    MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev1.7z
  - MINGW_DIR: mingw32
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/6.3.0/threads-posix/dwarf/i686-6.3.0-release-posix-dwarf-rt_v5-rev1.7z/download
    MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev1.7z

install:
- git submodule update --init
- if not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
- 7z x -y "%MINGW_ARCHIVE%" > nul
- set Path=%CD%\%MINGW_DIR%\bin;%Path%
# install sdl2
# install SDL2_mixer-devel-2.0.1-mingw.tar.gz
- if not exist "SDL2_mixer-devel-2.0.1-mingw.tar.gz" appveyor DownloadFile "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-2.0.1-mingw.tar.gz" -FileName "SDL2_mixer-devel-2.0.1-mingw.tar.gz"
- 7z e -y "SDL2_mixer-devel-2.0.1-mingw.tar.gz"
- 7z x -y "SDL2_mixer-devel-2.0.1-mingw.tar"
- if "%MINGW_DIR%" == "mingw64" xcopy /s /e "SDL2_mixer-2.0.1\x86_64-w64-mingw32" "%MINGW_DIR%"
- if "%MINGW_DIR%" == "mingw32" xcopy /s /e "SDL2_mixer-2.0.1\i686-w64-mingw32" "%MINGW_DIR%"
# install SDL2_ttf-devel-2.0.14-mingw.tar.gz
- if not exist "SDL2_ttf-devel-2.0.14-mingw.tar.gz" appveyor DownloadFile "https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-devel-2.0.14-mingw.tar.gz" -FileName "SDL2_ttf-devel-2.0.14-mingw.tar.gz"
- 7z e -y "SDL2_ttf-devel-2.0.14-mingw.tar.gz"
- 7z x -y "SDL2_ttf-devel-2.0.14-mingw.tar"
- if "%MINGW_DIR%" == "mingw64" xcopy /s /e "SDL2_ttf-2.0.14\x86_64-w64-mingw32" "%MINGW_DIR%"
- if "%MINGW_DIR%" == "mingw32" xcopy /s /e "SDL2_ttf-2.0.14\i686-w64-mingw32" "%MINGW_DIR%"
# install SDL2_image-devel-2.0.1-mingw.tar.gz
- if not exist "SDL2_image-devel-2.0.1-mingw.tar.gz" appveyor DownloadFile "https://www.libsdl.org/projects/SDL_image/release/SDL2_image-devel-2.0.1-mingw.tar.gz" -FileName "SDL2_image-devel-2.0.1-mingw.tar.gz"
- 7z e -y "SDL2_image-devel-2.0.1-mingw.tar.gz"
- 7z x -y "SDL2_image-devel-2.0.1-mingw.tar"
- if "%MINGW_DIR%" == "mingw64" xcopy /s /e "SDL2_image-2.0.1\x86_64-w64-mingw32" "%MINGW_DIR%"
- if "%MINGW_DIR%" == "mingw32" xcopy /s /e "SDL2_image-2.0.1\i686-w64-mingw32" "%MINGW_DIR%"
# install SDL2-devel-2.0.5-mingw.tar.gz
- if not exist "SDL2-devel-2.0.5-mingw.tar.gz" appveyor DownloadFile "https://www.libsdl.org/release/SDL2-devel-2.0.5-mingw.tar.gz" -FileName "SDL2-devel-2.0.5-mingw.tar.gz"
- 7z e -y "SDL2-devel-2.0.5-mingw.tar.gz"
- 7z x -y "SDL2-devel-2.0.5-mingw.tar"
- if "%MINGW_DIR%" == "mingw64" xcopy /s /e "SDL2-2.0.5\x86_64-w64-mingw32" "%MINGW_DIR%"
- if "%MINGW_DIR%" == "mingw32" xcopy /s /e "SDL2-2.0.5\i686-w64-mingw32" "%MINGW_DIR%"
# install boost
- if not exist "boost_1_63_0.7z" appveyor DownloadFile "https://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.7z/download" -FileName "boost_1_63_0.7z"
- 7z x -y "boost_1_63_0.7z"
- set BOOST_ROOT=boost_1_63_0
- cd boost_1_63_0
- bootstrap.bat
- b2 --with-serialization --with-system toolset=gcc variant=release link=static threading=multi
- cd ..
# CMake refuses to generate MinGW Makefiles if sh.exe is in the Path
- ps: Get-Command sh.exe -All | Remove-Item

before_build:
- set Path=%CD%\%MINGW_DIR%\bin;%Path%
- g++ --version
- mingw32-make --version
- cmake --version
- echo "NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%"
- if "%APPVEYOR_REPO_TAG%"=="true" (set CMAKE_BUILD_TYPE=Release) else (set CMAKE_BUILD_TYPE=Debug)
- cmake -H. -Bbuild\mingw -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE%

build_script:
- cmake --build build\mingw --use-stderr --target all -- -j%NUMBER_OF_PROCESSORS%

after_build:
#- cmake --build build\msvc32 --config Debug -- /verbosity:minimal /maxcpucount
#- if "%MINGW_DIR%"=="mingw64" cmake --build build\msvc64 --config Debug -- /verbosity:minimal /maxcpucount

on_success:
