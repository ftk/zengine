# See http://www.appveyor.com/docs/appveyor-yml

version: '{build}'


clone_depth: 5

cache:
- x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
- i686-7.3.0-release-posix-dwarf-rt_v5-rev0.7z
- boost_1_68_0

environment:
  matrix:
  - MINGW_DIR: mingw64
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-posix/seh/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z/download
    MINGW_ARCHIVE: x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
  - MINGW_DIR: mingw32
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/7.3.0/threads-posix/dwarf/i686-7.3.0-release-posix-dwarf-rt_v5-rev0.7z/download
    MINGW_ARCHIVE: i686-7.3.0-release-posix-dwarf-rt_v5-rev0.7z

install:
- if not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
- 7z x -y "%MINGW_ARCHIVE%" > nul
- set Path=%CD%\%MINGW_DIR%\bin;%Path%
# install boost
- set BB=
- if exist "boost_1_68_0" set BB=rem
- |-
  if not exist "boost_1_68_0.7z" %BB% appveyor DownloadFile "https://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.7z/download" -FileName "boost_1_68_0.7z"
  %BB% 7z x -y "boost_1_68_0.7z"
  %BB% cd boost_1_68_0
  %BB% rem bootstrap.bat
  %BB% rem b2 --with-system toolset=gcc variant=release link=static threading=multi
  %BB% cd ..
- set BOOST_ROOT=boost_1_68_0
# CMake refuses to generate MinGW Makefiles if sh.exe is in the Path
- ps: Get-Command sh.exe -All | Remove-Item

before_build:
- set Path=%CD%\%MINGW_DIR%\bin;%Path%
- g++ --version
- mingw32-make --version
- cmake --version
- echo "NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%"
#- if "%APPVEYOR_REPO_TAG%"=="true" (set CMAKE_BUILD_TYPE=Release) else (set CMAKE_BUILD_TYPE=Debug)
- set CMAKE_BUILD_TYPE=Release
- cmake -H. -Bbuild\mingw -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% "-DCMAKE_EXE_LINKER_FLAGS=-static-libgcc -static-libstdc++ -s" "-DCMAKE_CXX_FLAGS=-fvisibility=hidden"

build_script:
- cmake --build build\mingw --use-stderr --target all -- -j%NUMBER_OF_PROCESSORS%

after_build:
- git status
- git diff
#- cmake --build build\msvc32 --config Debug -- /verbosity:minimal /maxcpucount
#- if "%MINGW_DIR%"=="mingw64" cmake --build build\msvc64 --config Debug -- /verbosity:minimal /maxcpucount

on_success:

test: off

artifacts:
- path: build/mingw/*.exe
  name: bin
