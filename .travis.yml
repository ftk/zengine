language: cpp

dist: trusty

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir cmake-build-release
  - cd cmake-build-release
  - cmake .. -DCMAKE_BUILD_TYPE=Release ${CMAKE_OPTIONS}
  - make VERBOSE=1 -j 2

addons:
  apt:
    packages:
      - g++-6
      - libsdl2-dev
      - libsdl2-image-dev
      - libsdl2-ttf-dev
      - libsdl2-mixer-dev
    sources: &sources
      - ubuntu-toolchain-r-test


cache:
  directories:
    #- ${TRAVIS_BUILD_DIR}/deps/llvm-4.0.0
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.0
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.1
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.63.0

matrix:
  include:
    # GCC 6
    - os: linux
      env: COMPILER=g++-6     BOOST_VERSION=default BOOST_BUILD=gcc
      compiler: gcc

    # Clang 4.0
    #- os: linux
    #  env: LLVM_VERSION=4.0.0 BOOST_VERSION=default BOOST_BUILD=clang
    #  compiler: clang

    # Clang 3.9
    - os: linux
      env: LLVM_VERSION=3.9.0 BOOST_VERSION=default BOOST_BUILD=clang
      compiler: clang

    # Clang 3.8
    - os: linux
      env: LLVM_VERSION=3.8.1 BOOST_VERSION=default BOOST_BUILD=clang
      compiler: clang
  allow_failures:
     # Clang 4.0
     #- os: linux
     #  env: LLVM_VERSION=4.0.0 BOOST_VERSION=default BOOST_BUILD=clang
     #  compiler: clang



install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Setup default versions and override compiler if needed
  ############################################################################
  - if [[ "${LLVM_VERSION}" == "default" ]]; then LLVM_VERSION=3.9.0; fi
  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.63.0; fi

  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi
  ############################################################################
  # Install Clang, libc++ and libc++abi
  ############################################################################
  - |
    if [[ "${LLVM_VERSION}" != "" ]]; then
      LLVM_DIR=${DEPS_DIR}/llvm-${LLVM_VERSION}
      if [[ -z "$(ls -A ${LLVM_DIR})" ]]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
        mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
        travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
        (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=g++-6 -DCMAKE_C_COMPILER=gcc-6)
        (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
        (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
      fi
      export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
      export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
      export PATH="${LLVM_DIR}/clang/bin:${PATH}"
    fi

  ############################################################################
  # Install Boost
  ############################################################################
  - |
    if [[ "${BOOST_VERSION}" != "" ]]; then
      BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
      if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
        if [[ "${BOOST_VERSION}" == "trunk" ]]; then
          BOOST_URL="http://github.com/boostorg/boost.git"
          travis_retry git clone --depth 1 --recursive --quiet ${BOOST_URL} ${BOOST_DIR} || exit 1
          (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 headers)
        else
          BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
          mkdir -p ${BOOST_DIR}
          { travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
        fi
        if [[ "${BOOST_BUILD}" != "" ]]; then
          (cd ${BOOST_DIR}/tools/build && ./bootstrap.sh && ./b2 install --prefix=${DEPS_DIR}/b2)
          export PATH=${DEPS_DIR}/b2/bin:${PATH}
          cd "$BOOST_DIR"
          [[ "${CXXFLAGS}" != "" ]] && cxxflags="cxxflags=${CXXFLAGS}"
          [[ "${LDFLAGS}" != "" ]] && linkflags="linkflags=${LDFLAGS}"
          b2 --with-serialization --with-system "toolset=${BOOST_BUILD}" variant=release link=static threading=multi "${cxxflags}" "${linkflags}"
        fi
      fi
      CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"
    fi

